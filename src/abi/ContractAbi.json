{
	"abi": [
		{
			"type": "constructor",
			"inputs": [
				{ "name": "_worldId", "type": "address", "internalType": "contract IWorldID" },
				{ "name": "_appId", "type": "string", "internalType": "string" },
				{ "name": "_actionId", "type": "string", "internalType": "string" }
			],
			"stateMutability": "nonpayable"
		},
		{
			"type": "function",
			"name": "verifyAndExecute",
			"inputs": [
				{ "name": "signal", "type": "address", "internalType": "address" },
				{ "name": "root", "type": "uint256", "internalType": "uint256" },
				{ "name": "nullifierHash", "type": "uint256", "internalType": "uint256" },
				{ "name": "proof", "type": "uint256[8]", "internalType": "uint256[8]" }
			],
			"outputs": [],
			"stateMutability": "nonpayable"
		},
		{
			"type": "event",
			"name": "Verified",
			"inputs": [{ "name": "nullifierHash", "type": "uint256", "indexed": false, "internalType": "uint256" }],
			"anonymous": false
		},
		{
			"type": "error",
			"name": "DuplicateNullifier",
			"inputs": [{ "name": "nullifierHash", "type": "uint256", "internalType": "uint256" }]
		}
	],
	"bytecode": {
		"object": "0x60e0604052600160c090815250348015610017575f5ffd5b5060405161096c38038061096c833981810160405281019061003991906102c6565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506100ca61009e836040516020016100849190610392565b6040516020818303038152906040526100d960201b60201c565b826040516020016100b09291906103d1565b6040516020818303038152906040526100d960201b60201c565b60a08181525050505050610452565b5f6008826040516020016100ed919061043c565b604051602081830303815290604052805190602001205f1c901c9050919050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101488261011f565b9050919050565b5f6101598261013e565b9050919050565b6101698161014f565b8114610173575f5ffd5b50565b5f8151905061018481610160565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101d882610192565b810181811067ffffffffffffffff821117156101f7576101f66101a2565b5b80604052505050565b5f61020961010e565b905061021582826101cf565b919050565b5f67ffffffffffffffff821115610234576102336101a2565b5b61023d82610192565b9050602081019050919050565b8281835e5f83830152505050565b5f61026a6102658461021a565b610200565b9050828152602081018484840111156102865761028561018e565b5b61029184828561024a565b509392505050565b5f82601f8301126102ad576102ac61018a565b5b81516102bd848260208601610258565b91505092915050565b5f5f5f606084860312156102dd576102dc610117565b5b5f6102ea86828701610176565b935050602084015167ffffffffffffffff81111561030b5761030a61011b565b5b61031786828701610299565b925050604084015167ffffffffffffffff8111156103385761033761011b565b5b61034486828701610299565b9150509250925092565b5f81519050919050565b5f81905092915050565b5f61036c8261034e565b6103768185610358565b935061038681856020860161024a565b80840191505092915050565b5f61039d8284610362565b915081905092915050565b5f819050919050565b5f819050919050565b6103cb6103c6826103a8565b6103b1565b82525050565b5f6103dc82856103ba565b6020820191506103ec8284610362565b91508190509392505050565b5f81519050919050565b5f81905092915050565b5f610416826103f8565b6104208185610402565b935061043081856020860161024a565b80840191505092915050565b5f610447828461040c565b915081905092915050565b60805160a05160c0516104f261047a5f395f60e701525f61013101525f60aa01526104f25ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063e9b705531461002d575b5f5ffd5b610047600480360381019061004291906102ee565b610049565b005b5f5f8381526020019081526020015f205f9054906101000a900460ff16156100a857816040517f78ffaa2600000000000000000000000000000000000000000000000000000000815260040161009f9190610362565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633bc778e3847f000000000000000000000000000000000000000000000000000000000000000061012e8860405160200161011a91906103c0565b604051602081830303815290604052610203565b867f0000000000000000000000000000000000000000000000000000000000000000876040518763ffffffff1660e01b8152600401610172969594939291906103f4565b5f6040518083038186803b158015610188575f5ffd5b505afa15801561019a573d5f5f3e3d5ffd5b5050505060015f5f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055507ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f7826040516101f59190610362565b60405180910390a150505050565b5f60088260405160200161021791906104a6565b604051602081830303815290604052805190602001205f1c901c9050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102658261023c565b9050919050565b6102758161025b565b811461027f575f5ffd5b50565b5f813590506102908161026c565b92915050565b5f819050919050565b6102a881610296565b81146102b2575f5ffd5b50565b5f813590506102c38161029f565b92915050565b5f5ffd5b5f819050826020600802820111156102e8576102e76102c9565b5b92915050565b5f5f5f5f610160858703121561030757610306610238565b5b5f61031487828801610282565b9450506020610325878288016102b5565b9350506040610336878288016102b5565b9250506060610347878288016102cd565b91505092959194509250565b61035c81610296565b82525050565b5f6020820190506103755f830184610353565b92915050565b5f8160601b9050919050565b5f6103918261037b565b9050919050565b5f6103a282610387565b9050919050565b6103ba6103b58261025b565b610398565b82525050565b5f6103cb82846103a9565b60148201915081905092915050565b82818337505050565b6103f061010083836103da565b5050565b5f6101a0820190506104085f830189610353565b6104156020830188610353565b6104226040830187610353565b61042f6060830186610353565b61043c6080830185610353565b61044960a08301846103e3565b979650505050505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61048082610454565b61048a818561045e565b935061049a818560208601610468565b80840191505092915050565b5f6104b18284610476565b91508190509291505056fea2646970667358221220a1486455aae11cd0321057430f6d3283bfbf51ce5ecfc811332e952fdddc239664736f6c634300081c0033",
		"sourceMap": "168:2785:0:-:0;;;856:1;819:38;;;;;1397:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1489:8;1479:18;;;;;;;;;;1521:81;1538:38;1555:6;1538:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;;:38;;:::i;:::-;1578:9;1521:67;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:79;;;:81;;:::i;:::-;1501:101;;;;;;1397:209;;;168:2785;;287:136:1;351:7;418:1;406:5;389:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;379:34;;;;;;371:43;;:48;;364:55;;287:136;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:117::-;1136:1;1133;1126:12;1150:117;1259:1;1256;1249:12;1273:102;1314:6;1365:2;1361:7;1356:2;1349:5;1345:14;1341:28;1331:38;;1273:102;;;:::o;1381:180::-;1429:77;1426:1;1419:88;1526:4;1523:1;1516:15;1550:4;1547:1;1540:15;1567:281;1650:27;1672:4;1650:27;:::i;:::-;1642:6;1638:40;1780:6;1768:10;1765:22;1744:18;1732:10;1729:34;1726:62;1723:88;;;1791:18;;:::i;:::-;1723:88;1831:10;1827:2;1820:22;1610:238;1567:281;;:::o;1854:129::-;1888:6;1915:20;;:::i;:::-;1905:30;;1944:33;1972:4;1964:6;1944:33;:::i;:::-;1854:129;;;:::o;1989:308::-;2051:4;2141:18;2133:6;2130:30;2127:56;;;2163:18;;:::i;:::-;2127:56;2201:29;2223:6;2201:29;:::i;:::-;2193:37;;2285:4;2279;2275:15;2267:23;;1989:308;;;:::o;2303:139::-;2392:6;2387:3;2382;2376:23;2433:1;2424:6;2419:3;2415:16;2408:27;2303:139;;;:::o;2448:434::-;2537:5;2562:66;2578:49;2620:6;2578:49;:::i;:::-;2562:66;:::i;:::-;2553:75;;2651:6;2644:5;2637:21;2689:4;2682:5;2678:16;2727:3;2718:6;2713:3;2709:16;2706:25;2703:112;;;2734:79;;:::i;:::-;2703:112;2824:52;2869:6;2864:3;2859;2824:52;:::i;:::-;2543:339;2448:434;;;;;:::o;2902:355::-;2969:5;3018:3;3011:4;3003:6;2999:17;2995:27;2985:122;;3026:79;;:::i;:::-;2985:122;3136:6;3130:13;3161:90;3247:3;3239:6;3232:4;3224:6;3220:17;3161:90;:::i;:::-;3152:99;;2975:282;2902:355;;;;:::o;3263:1041::-;3387:6;3395;3403;3452:2;3440:9;3431:7;3427:23;3423:32;3420:119;;;3458:79;;:::i;:::-;3420:119;3578:1;3603:80;3675:7;3666:6;3655:9;3651:22;3603:80;:::i;:::-;3593:90;;3549:144;3753:2;3742:9;3738:18;3732:25;3784:18;3776:6;3773:30;3770:117;;;3806:79;;:::i;:::-;3770:117;3911:74;3977:7;3968:6;3957:9;3953:22;3911:74;:::i;:::-;3901:84;;3703:292;4055:2;4044:9;4040:18;4034:25;4086:18;4078:6;4075:30;4072:117;;;4108:79;;:::i;:::-;4072:117;4213:74;4279:7;4270:6;4259:9;4255:22;4213:74;:::i;:::-;4203:84;;4005:292;3263:1041;;;;;:::o;4310:99::-;4362:6;4396:5;4390:12;4380:22;;4310:99;;;:::o;4415:148::-;4517:11;4554:3;4539:18;;4415:148;;;;:::o;4569:390::-;4675:3;4703:39;4736:5;4703:39;:::i;:::-;4758:89;4840:6;4835:3;4758:89;:::i;:::-;4751:96;;4856:65;4914:6;4909:3;4902:4;4895:5;4891:16;4856:65;:::i;:::-;4946:6;4941:3;4937:16;4930:23;;4679:280;4569:390;;;;:::o;4965:275::-;5097:3;5119:95;5210:3;5201:6;5119:95;:::i;:::-;5112:102;;5231:3;5224:10;;4965:275;;;;:::o;5246:77::-;5283:7;5312:5;5301:16;;5246:77;;;:::o;5329:79::-;5368:7;5397:5;5386:16;;5329:79;;;:::o;5414:157::-;5519:45;5539:24;5557:5;5539:24;:::i;:::-;5519:45;:::i;:::-;5514:3;5507:58;5414:157;;:::o;5577:416::-;5737:3;5752:75;5823:3;5814:6;5752:75;:::i;:::-;5852:2;5847:3;5843:12;5836:19;;5872:95;5963:3;5954:6;5872:95;:::i;:::-;5865:102;;5984:3;5977:10;;5577:416;;;;;:::o;5999:98::-;6050:6;6084:5;6078:12;6068:22;;5999:98;;;:::o;6103:147::-;6204:11;6241:3;6226:18;;6103:147;;;;:::o;6256:386::-;6360:3;6388:38;6420:5;6388:38;:::i;:::-;6442:88;6523:6;6518:3;6442:88;:::i;:::-;6435:95;;6539:65;6597:6;6592:3;6585:4;6578:5;6574:16;6539:65;:::i;:::-;6629:6;6624:3;6620:16;6613:23;;6364:278;6256:386;;;;:::o;6648:271::-;6778:3;6800:93;6889:3;6880:6;6800:93;:::i;:::-;6793:100;;6910:3;6903:10;;6648:271;;;;:::o;168:2785:0:-;;;;;;;;;;;;;;;;;;;;;;;;;",
		"linkReferences": {}
	},
	"deployedBytecode": {
		"object": "0x608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063e9b705531461002d575b5f5ffd5b610047600480360381019061004291906102ee565b610049565b005b5f5f8381526020019081526020015f205f9054906101000a900460ff16156100a857816040517f78ffaa2600000000000000000000000000000000000000000000000000000000815260040161009f9190610362565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633bc778e3847f000000000000000000000000000000000000000000000000000000000000000061012e8860405160200161011a91906103c0565b604051602081830303815290604052610203565b867f0000000000000000000000000000000000000000000000000000000000000000876040518763ffffffff1660e01b8152600401610172969594939291906103f4565b5f6040518083038186803b158015610188575f5ffd5b505afa15801561019a573d5f5f3e3d5ffd5b5050505060015f5f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055507ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f7826040516101f59190610362565b60405180910390a150505050565b5f60088260405160200161021791906104a6565b604051602081830303815290604052805190602001205f1c901c9050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102658261023c565b9050919050565b6102758161025b565b811461027f575f5ffd5b50565b5f813590506102908161026c565b92915050565b5f819050919050565b6102a881610296565b81146102b2575f5ffd5b50565b5f813590506102c38161029f565b92915050565b5f5ffd5b5f819050826020600802820111156102e8576102e76102c9565b5b92915050565b5f5f5f5f610160858703121561030757610306610238565b5b5f61031487828801610282565b9450506020610325878288016102b5565b9350506040610336878288016102b5565b9250506060610347878288016102cd565b91505092959194509250565b61035c81610296565b82525050565b5f6020820190506103755f830184610353565b92915050565b5f8160601b9050919050565b5f6103918261037b565b9050919050565b5f6103a282610387565b9050919050565b6103ba6103b58261025b565b610398565b82525050565b5f6103cb82846103a9565b60148201915081905092915050565b82818337505050565b6103f061010083836103da565b5050565b5f6101a0820190506104085f830189610353565b6104156020830188610353565b6104226040830187610353565b61042f6060830186610353565b61043c6080830185610353565b61044960a08301846103e3565b979650505050505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61048082610454565b61048a818561045e565b935061049a818560208601610468565b80840191505092915050565b5f6104b18284610476565b91508190509291505056fea2646970667358221220a1486455aae11cd0321057430f6d3283bfbf51ce5ecfc811332e952fdddc239664736f6c634300081c0033",
		"sourceMap": "168:2785:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:783;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;2350:15;:30;2366:13;2350:30;;;;;;;;;;;;;;;;;;;;;2346:76;;;2408:13;2389:33;;;;;;;;;;;:::i;:::-;;;;;;;;2346:76;2511:7;:19;;;2535:4;2544:7;2556:38;2573:6;2556:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;:38::i;:::-;2599:13;2617:17;2639:5;2511:137;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2777:4;2744:15;:30;2760:13;2744:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2924:23;2933:13;2924:23;;;;;;:::i;:::-;;;;;;;;2168:783;;;;:::o;287:136:1:-;351:7;418:1;406:5;389:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;379:34;;;;;;371:43;;:48;;364:55;;287:136;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1338:249;1409:8;1440:6;1428:18;;1493:3;1485:4;1479;1475:15;1465:8;1461:30;1458:39;1455:126;;;1500:79;;:::i;:::-;1455:126;1338:249;;;;:::o;1593:815::-;1704:6;1712;1720;1728;1777:3;1765:9;1756:7;1752:23;1748:33;1745:120;;;1784:79;;:::i;:::-;1745:120;1904:1;1929:53;1974:7;1965:6;1954:9;1950:22;1929:53;:::i;:::-;1919:63;;1875:117;2031:2;2057:53;2102:7;2093:6;2082:9;2078:22;2057:53;:::i;:::-;2047:63;;2002:118;2159:2;2185:53;2230:7;2221:6;2210:9;2206:22;2185:53;:::i;:::-;2175:63;;2130:118;2287:2;2313:78;2383:7;2374:6;2363:9;2359:22;2313:78;:::i;:::-;2303:88;;2258:143;1593:815;;;;;;;:::o;2414:118::-;2501:24;2519:5;2501:24;:::i;:::-;2496:3;2489:37;2414:118;;:::o;2538:222::-;2631:4;2669:2;2658:9;2654:18;2646:26;;2682:71;2750:1;2739:9;2735:17;2726:6;2682:71;:::i;:::-;2538:222;;;;:::o;2766:94::-;2799:8;2847:5;2843:2;2839:14;2818:35;;2766:94;;;:::o;2866:::-;2905:7;2934:20;2948:5;2934:20;:::i;:::-;2923:31;;2866:94;;;:::o;2966:100::-;3005:7;3034:26;3054:5;3034:26;:::i;:::-;3023:37;;2966:100;;;:::o;3072:157::-;3177:45;3197:24;3215:5;3197:24;:::i;:::-;3177:45;:::i;:::-;3172:3;3165:58;3072:157;;:::o;3235:256::-;3347:3;3362:75;3433:3;3424:6;3362:75;:::i;:::-;3462:2;3457:3;3453:12;3446:19;;3482:3;3475:10;;3235:256;;;;:::o;3497:99::-;3582:6;3577:3;3572;3559:30;3497:99;;;:::o;3634:172::-;3757:43;3793:6;3788:3;3781:5;3757:43;:::i;:::-;3634:172;;:::o;3812:871::-;4093:4;4131:3;4120:9;4116:19;4108:27;;4145:71;4213:1;4202:9;4198:17;4189:6;4145:71;:::i;:::-;4226:72;4294:2;4283:9;4279:18;4270:6;4226:72;:::i;:::-;4308;4376:2;4365:9;4361:18;4352:6;4308:72;:::i;:::-;4390;4458:2;4447:9;4443:18;4434:6;4390:72;:::i;:::-;4472:73;4540:3;4529:9;4525:19;4516:6;4472:73;:::i;:::-;4555:121;4671:3;4660:9;4656:19;4647:6;4555:121;:::i;:::-;3812:871;;;;;;;;;:::o;4689:98::-;4740:6;4774:5;4768:12;4758:22;;4689:98;;;:::o;4793:147::-;4894:11;4931:3;4916:18;;4793:147;;;;:::o;4946:139::-;5035:6;5030:3;5025;5019:23;5076:1;5067:6;5062:3;5058:16;5051:27;4946:139;;;:::o;5091:386::-;5195:3;5223:38;5255:5;5223:38;:::i;:::-;5277:88;5358:6;5353:3;5277:88;:::i;:::-;5270:95;;5374:65;5432:6;5427:3;5420:4;5413:5;5409:16;5374:65;:::i;:::-;5464:6;5459:3;5455:16;5448:23;;5199:278;5091:386;;;;:::o;5483:271::-;5613:3;5635:93;5724:3;5715:6;5635:93;:::i;:::-;5628:100;;5745:3;5738:10;;5483:271;;;;:::o",
		"linkReferences": {},
		"immutableReferences": {
			"17": [{ "start": 170, "length": 32 }],
			"20": [{ "start": 305, "length": 32 }],
			"24": [{ "start": 231, "length": 32 }]
		}
	},
	"methodIdentifiers": { "verifyAndExecute(address,uint256,uint256,uint256[8])": "e9b70553" },
	"rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IWorldID\",\"name\":\"_worldId\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_appId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_actionId\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"}],\"name\":\"DuplicateNullifier\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyAndExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Verified(uint256)\":{\"details\":\"A placeholder event that is emitted when a user successfully verifies with World ID\",\"params\":{\"nullifierHash\":\"The nullifier hash for the verified proof\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_actionId\":\"The World ID action ID\",\"_appId\":\"The World ID app ID\",\"_worldId\":\"The WorldID router that will verify the proofs\"}},\"verifyAndExecute(address,uint256,uint256,uint256[8])\":{\"details\":\"Feel free to rename this method however you want! We've used `claim`, `verify` or `execute` in the past.\",\"params\":{\"nullifierHash\":\"The nullifier hash for this proof, preventing double signaling (returned by the JS widget).\",\"proof\":\"The zero-knowledge proof that demonstrates the claimer is registered with World ID (returned by the JS widget).\",\"root\":\"The root of the Merkle tree (returned by the JS widget).\",\"signal\":\"An arbitrary input from the user, usually the user's wallet address (check README for further details)\"}}},\"stateVariables\":{\"externalNullifier\":{\"details\":\"The contract's external nullifier hash\"},\"groupId\":{\"details\":\"The World ID group ID (always 1)\"},\"nullifierHashes\":{\"details\":\"Whether a nullifier hash has been used already. Used to guarantee an action is only performed once by a single person\"},\"worldId\":{\"details\":\"The World ID instance that will be used for verifying proofs\"}},\"version\":1},\"userdoc\":{\"errors\":{\"DuplicateNullifier(uint256)\":[{\"notice\":\"Thrown when attempting to reuse a nullifier\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract.sol\":\"Contract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Contract.sol\":{\"keccak256\":\"0x0ca1f9ad53e6aedb355e6ff1ac8b2de58db71358b2fdc1275d8d021dd74018b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec95894b890d2f1504c901d3015f3f22d622c09a9ad202ae50d75abe26789989\",\"dweb:/ipfs/QmaHmDfzRjY8qaR1dAmiJwPyNXaDAvTWoTTrRtuhZ2WMAF\"]},\"src/helpers/ByteHasher.sol\":{\"keccak256\":\"0x244f7f162ddc2bf71d37d3753d975ce89ff9a44f1181fda2774eb0f58c625330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8464cba228f8ba420ca07c32ca091c6688c8a790ddd29a9b2219fa6e43717e\",\"dweb:/ipfs/QmPvsGAS2GSvTd2yxLiLVHYgv5LhqPYqpAw3jgBH223gC5\"]},\"src/interfaces/IWorldID.sol\":{\"keccak256\":\"0x3c54b39a33ec54a982a75826e4f75bc0dbf28ad7b22bcb7c8558557edf1fa1ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aad6e7f99e315296ff726a14cb83cd96b1efeec249eba46c34f3cee74979e71d\",\"dweb:/ipfs/QmfGTrPmfJPV2KfqtCVL5ESkCbd4wuUxbTMoWj2bE3M1j6\"]}},\"version\":1}",
	"metadata": {
		"compiler": { "version": "0.8.28+commit.7893614a" },
		"language": "Solidity",
		"output": {
			"abi": [
				{
					"inputs": [
						{ "internalType": "contract IWorldID", "name": "_worldId", "type": "address" },
						{ "internalType": "string", "name": "_appId", "type": "string" },
						{ "internalType": "string", "name": "_actionId", "type": "string" }
					],
					"stateMutability": "nonpayable",
					"type": "constructor"
				},
				{
					"inputs": [{ "internalType": "uint256", "name": "nullifierHash", "type": "uint256" }],
					"type": "error",
					"name": "DuplicateNullifier"
				},
				{
					"inputs": [
						{ "internalType": "uint256", "name": "nullifierHash", "type": "uint256", "indexed": false }
					],
					"type": "event",
					"name": "Verified",
					"anonymous": false
				},
				{
					"inputs": [
						{ "internalType": "address", "name": "signal", "type": "address" },
						{ "internalType": "uint256", "name": "root", "type": "uint256" },
						{ "internalType": "uint256", "name": "nullifierHash", "type": "uint256" },
						{ "internalType": "uint256[8]", "name": "proof", "type": "uint256[8]" }
					],
					"stateMutability": "nonpayable",
					"type": "function",
					"name": "verifyAndExecute"
				}
			],
			"devdoc": {
				"kind": "dev",
				"methods": {
					"constructor": {
						"params": {
							"_actionId": "The World ID action ID",
							"_appId": "The World ID app ID",
							"_worldId": "The WorldID router that will verify the proofs"
						}
					},
					"verifyAndExecute(address,uint256,uint256,uint256[8])": {
						"details": "Feel free to rename this method however you want! We've used `claim`, `verify` or `execute` in the past.",
						"params": {
							"nullifierHash": "The nullifier hash for this proof, preventing double signaling (returned by the JS widget).",
							"proof": "The zero-knowledge proof that demonstrates the claimer is registered with World ID (returned by the JS widget).",
							"root": "The root of the Merkle tree (returned by the JS widget).",
							"signal": "An arbitrary input from the user, usually the user's wallet address (check README for further details)"
						}
					}
				},
				"version": 1
			},
			"userdoc": { "kind": "user", "methods": {}, "version": 1 }
		},
		"settings": {
			"remappings": [],
			"optimizer": { "enabled": false, "runs": 200 },
			"metadata": { "bytecodeHash": "ipfs" },
			"compilationTarget": { "src/Contract.sol": "Contract" },
			"evmVersion": "prague",
			"libraries": {}
		},
		"sources": {
			"src/Contract.sol": {
				"keccak256": "0x0ca1f9ad53e6aedb355e6ff1ac8b2de58db71358b2fdc1275d8d021dd74018b8",
				"urls": [
					"bzz-raw://ec95894b890d2f1504c901d3015f3f22d622c09a9ad202ae50d75abe26789989",
					"dweb:/ipfs/QmaHmDfzRjY8qaR1dAmiJwPyNXaDAvTWoTTrRtuhZ2WMAF"
				],
				"license": "MIT"
			},
			"src/helpers/ByteHasher.sol": {
				"keccak256": "0x244f7f162ddc2bf71d37d3753d975ce89ff9a44f1181fda2774eb0f58c625330",
				"urls": [
					"bzz-raw://8c8464cba228f8ba420ca07c32ca091c6688c8a790ddd29a9b2219fa6e43717e",
					"dweb:/ipfs/QmPvsGAS2GSvTd2yxLiLVHYgv5LhqPYqpAw3jgBH223gC5"
				],
				"license": "MIT"
			},
			"src/interfaces/IWorldID.sol": {
				"keccak256": "0x3c54b39a33ec54a982a75826e4f75bc0dbf28ad7b22bcb7c8558557edf1fa1ef",
				"urls": [
					"bzz-raw://aad6e7f99e315296ff726a14cb83cd96b1efeec249eba46c34f3cee74979e71d",
					"dweb:/ipfs/QmfGTrPmfJPV2KfqtCVL5ESkCbd4wuUxbTMoWj2bE3M1j6"
				],
				"license": "MIT"
			}
		},
		"version": 1
	},
	"id": 0
}
